- name: Download hits data file
  get_url:
    url: "https://datasets.clickhouse.tech/hits/tsv/hits_v1.tsv.xz"
    dest: "{{ work_dir }}/"
    checksum: sha256:40df8d1c2c5175836fa1d4b62b7667d6a0aaa8f1cd60dbdbea35fcc8dff635c5
    force: no
    # disable time consuming task
  when: 0 > 1

- name: Download visits data file
  get_url:
    url: "https://datasets.clickhouse.tech/visits/tsv/visits_v1.tsv.xz"
    dest: "{{ work_dir }}/"
    checksum: sha256:4a3ac7529439bf565e967962dc87d00250d5b60414c7eed51466b9fafeb4fa3a
    force: no
    # disable time consuming task
  when: 0 > 1

- name: Extract hits data
  shell: |
    if [ ! -f hits_v1.tsv ]; then
      unxz hits_v1.tsv.xz
    fi
  args:
    chdir: "{{ work_dir }}"


- name: Extract visits data
  shell: |
    if [ ! -f visits_v1.tsv ]; then
      unxz visits_v1.tsv.xz
    fi
  args:
    chdir: "{{ work_dir }}"

- name: check data existence of hits
  shell: |
    clickhouse-client -q "select count() from tutorial.hits FORMAT TSV"
  register: hits_count
  run_once: true

- name: check data existence of visits
  shell: |
    clickhouse-client -q "select count() from tutorial.visits FORMAT TSV"
  register: visits_count
  run_once: true

- name: Import data of hits
  shell: |
    clickhouse-client --query "INSERT INTO tutorial.hits FORMAT TSV" --max_insert_block_size=100000 < hits_v1.tsv
  args:
    chdir: "{{ work_dir }}"
  run_once: true
  when: hits_count.stdout == "0"

- name: Import data of visits
  shell: |
    clickhouse-client --query "INSERT INTO tutorial.visits FORMAT TSV" --max_insert_block_size=100000 < visits_v1.tsv
  args:
    chdir: "{{ work_dir }}"
  run_once: true
  when: visits_count.stdout == "0"